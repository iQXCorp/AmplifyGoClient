/* 
 * iQX Amplify API Reference
 *
 * Welcome to the iQX Amplify API reference. This is a live example of how you can use [iQX Amplify](http://app.iqxamplify.com/) to integrate your own e-commerce store or ticketing engine.  The iQX Amplify API is organized around the [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer) mothodology, and it uses resource-oriented URLs, and common HTTP response codes to indicate API errors. All requests are authenticated using an `api-key` which can be obtained from your developer dashboard within iQX Amplify.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: development@iqxcorp.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

package swagger

import (
	"time"
)

type Product struct {

	// Primary key
	Id string `json:"id,omitempty"`

	// Comma seperated string of the product categories
	Categories string `json:"categories,omitempty"`

	// The currency the product is listed in
	Currency string `json:"currency,omitempty"`

	// The full URL to the product on the store
	Handle string `json:"handle,omitempty"`

	// The URL to the Product's image
	ImageSourceUrl string `json:"image_source_url,omitempty"`

	// The URL to the Product's thumbnail
	ImageThubnail string `json:"image_thubnail,omitempty"`

	// If the product is downloadable
	IsDownloadable bool `json:"is_downloadable,omitempty"`

	// If the Product is virtual
	IsVirtual bool `json:"is_virtual,omitempty"`

	// If the product has had a keyword set against it
	KeywordLocked bool `json:"keyword_locked,omitempty"`

	// If the product is out of stock
	OutStock bool `json:"out_stock,omitempty"`

	// The price of the product
	Price float32 `json:"price,omitempty"`

	// The price compare for sale items
	PriceCompare float32 `json:"price_compare,omitempty"`

	// Array of the product tags
	ProductTags []string `json:"product_tags,omitempty"`

	// The date the product was published
	PublishedAt time.Time `json:"published_at,omitempty"`

	// The Products's external reference Id
	RefId string `json:"ref_id,omitempty"`

	// Product's sku
	Sku string `json:"sku,omitempty"`

	// The Product's integration source
	Source string `json:"source,omitempty"`

	// Comma delimited string of tags
	Tags string `json:"tags,omitempty"`

	// The product title
	Title string `json:"title,omitempty"`

	// If the product is a simple or variable type product
	Type_ string `json:"type,omitempty"`

	// Connected user id
	UserId string `json:"user_id,omitempty"`

	// Array of product variants
	Variants []ProductVariants `json:"variants,omitempty"`

	// The vendor connected to the Product
	Vendor string `json:"vendor,omitempty"`
}
